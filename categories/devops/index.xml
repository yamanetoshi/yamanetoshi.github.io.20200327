<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Devops on /var/log/messages</title>
    <link>https://weblog.metacircular-evaluator.org/categories/devops/</link>
    <description>Recent content in Devops on /var/log/messages</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Wed, 29 Aug 2018 21:13:09 +0900</lastBuildDate>
    
	<atom:link href="https://weblog.metacircular-evaluator.org/categories/devops/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to use Amazon API Gateway {proxy&#43;}</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2018/08/29/how-to-use-amazon-api-gateway-proxy/</link>
      <pubDate>Wed, 29 Aug 2018 21:13:09 +0900</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2018/08/29/how-to-use-amazon-api-gateway-proxy/</guid>
      <description>&lt;p&gt;以下なドキュメントを機械翻訳したので以下に控えを。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.1strategy.com/blog/2017/06/06/how-to-use-amazon-api-gateway-proxy/&#34;&gt;How to use Amazon API Gateway {proxy+}&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DevOps Okinawa #9</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2014/10/08/devops-conference/</link>
      <pubDate>Wed, 08 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2014/10/08/devops-conference/</guid>
      <description>DevOps といいつつ、ただのもくもく会なのですが。。 来週の土曜日に開催予定となってます。 DevOps Okinawa #9 Linux Kernel をデバッガで、なソレがメインテーマになるのかどうか</description>
    </item>
    
    <item>
      <title>ネタ見つけた</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2014/08/29/found-the-neta/</link>
      <pubDate>Fri, 29 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2014/08/29/found-the-neta/</guid>
      <description>DevOps Okinawa #8 なネタとして以下を発見。 Linuxのmmap()を通して、アドレス空間の扱いを垣間見る Linuxの仮想 - 物理アドレスと、カーネル空間の</description>
    </item>
    
    <item>
      <title>DevOps Okinawa #7</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2014/07/30/devops-okinawa-7/</link>
      <pubDate>Wed, 30 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2014/07/30/devops-okinawa-7/</guid>
      <description>&lt;p&gt;8.9 午後に開催となりました。申し込みは以下より。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://devops-okinawa.doorkeeper.jp/events/13852&#34;&gt;DevOps Okinawa #7&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;傾向てきに&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ansible&lt;/li&gt;
&lt;li&gt;Docker&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;が多いカンジです。あと、IceBreak という訳でも無いのでしょうが、いつの頃からか開始直後は様々な知見を発信する場所になっていたりしてます。&lt;/p&gt;

&lt;p&gt;ぼくも今回は例の Docker ネタで発信させて頂こうと思っていたりして。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DevOps Okinawa #6</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2014/06/27/devops-okinawa-6/</link>
      <pubDate>Fri, 27 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2014/06/27/devops-okinawa-6/</guid>
      <description>7.5 (土) 琉大にて開催となりました。参加登録は以下より。 DevOps Okinawa #6 ぼくは以下なあたりで云々な方向かな、と思ってます。 Docker: Linuxコンテナを使ってア</description>
    </item>
    
    <item>
      <title>もくもく会</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2014/06/09/moku-moku-conference/</link>
      <pubDate>Mon, 09 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2014/06/09/moku-moku-conference/</guid>
      <description>行けるのかどうか。 DevOps Okinawa #5 エア参加かリアル参加かを問わず、以下を云々する方向で考えてます。 WRITE YOUR FIRST LINUX KERNEL MODULE どうなるか。エア参加だと仕事します (ぇ</description>
    </item>
    
    <item>
      <title>Docker もくもく</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2014/05/24/okinawa-devops/</link>
      <pubDate>Sat, 24 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2014/05/24/okinawa-devops/</guid>
      <description>&lt;p&gt;とりあえず以下を試してみる方向。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://yss44.hatenablog.com/entry/2014/01/05/031736&#34;&gt;Dockerで複数プロセスを起動する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;どうなるか。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>もくもく会</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2014/05/19/moku-moku/</link>
      <pubDate>Mon, 19 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2014/05/19/moku-moku/</guid>
      <description>来週土曜の 5.24 開催予定です。詳細以下。 DevOps Okinawa #4 ansible 流行ってます。ぼくは docker で云々してみる方向。そいえば ansible なソレを云々、ってのもありかな、と思っていた</description>
    </item>
    
    <item>
      <title>メモ (備忘)</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2014/05/17/memo/</link>
      <pubDate>Sat, 17 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2014/05/17/memo/</guid>
      <description>次のエントリをチェック入れて来週のもくもくに、なのかどうか。 Using “git push” to deploy Ruby applications to your own server 追記 ssh なサーバが動いてるコンテナの起動、に失</description>
    </item>
    
    <item>
      <title>Docker 修行</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2014/05/10/training-of-docker/</link>
      <pubDate>Sat, 10 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2014/05/10/training-of-docker/</guid>
      <description>とりあえず来週および再来週は Docker 入門 を確認しつつメモを取って、IDCF リソースで nginx とかで Web なナニを proxy できるか、とかを確認した上で Docker 祭り なエント</description>
    </item>
    
    <item>
      <title>Fog な PR</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2014/05/02/pull-request-in-fog/</link>
      <pubDate>Fri, 02 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2014/05/02/pull-request-in-fog/</guid>
      <description>&lt;p&gt;以下なコメントが入っていたけど当分対応できなかった。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;will that test work in non-mock mode as well? I just ask since it manipulates the mocks there.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;確かに&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ export FOG_MOCK=true &amp;amp;&amp;amp; bundle exec shindont
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で試験してますね。とりあえず FOG_MOCK は何もせずに試験を実行してみます。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Docker 祭り</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2014/05/01/docker/</link>
      <pubDate>Thu, 01 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2014/05/01/docker/</guid>
      <description>今月、5.17 および 5.24 にもくもくな勉強会開催らしい。とりあえず以下なあたりのネタを云々する方向で考えてます。 Docker で 自動バックアップ付きの git</description>
    </item>
    
    <item>
      <title>fog 掘削および i/f 追加に関する纏め</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2014/04/24/fog/</link>
      <pubDate>Thu, 24 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2014/04/24/fog/</guid>
      <description>&lt;p&gt;とりあえず、Fog::Compute.new あたりをエントリポイントとして掘削開始。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>fog の extractTemplate API なナニ</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2014/04/18/add-function-of-cloudstack-api/</link>
      <pubDate>Fri, 18 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2014/04/18/add-function-of-cloudstack-api/</guid>
      <description>&lt;p&gt;pull request をアレしたらテストも付けてくんない? って言われている件。travis なナニに失敗、ってあるけど追加機能に関する試験が無い場合も ci てきに失敗になるのかな。なかなか凄い。&lt;/p&gt;

&lt;h2 id=&#34;てか&#34;&gt;てか&lt;/h2&gt;

&lt;p&gt;試験書け、って話なので諸々検討を。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>fog の試験</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2014/04/18/test-of-fog/</link>
      <pubDate>Fri, 18 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2014/04/18/test-of-fog/</guid>
      <description>&lt;p&gt;commit 作って push してやれ、と思って念のために試験してみたらパスしてない。&lt;/p&gt;

&lt;p&gt;どうも self.data の&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;        def self.data
          @data ||= begin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;な記述で&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;      class Mock
        def extract_template(options={})
          Fog.credentials[:cloudstack_zone_id] = 1105
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;なことしてる影響が他に及んでいる模様。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DevOps Okinawa #3</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2014/04/17/devops-conference-in-okinawa/</link>
      <pubDate>Thu, 17 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2014/04/17/devops-conference-in-okinawa/</guid>
      <description>とは言え、基本もくもく会です。 DevOps Okinawa #3 若い方々が継続開催を希望なさっているので、こぢんまり続けていければ良いな。 ちなみにわしは今回 ansible の Tutorial をもく</description>
    </item>
    
    <item>
      <title>DevOpsOkinawa #2</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2014/03/07/devopsokinawa-2/</link>
      <pubDate>Fri, 07 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2014/03/07/devopsokinawa-2/</guid>
      <description>&lt;p&gt;明日開催。わし的なメインテーマは Apache 掘削。バージョンは 2.4.7 との事なので入手しておくことに。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GitHub に登録したプロトタイプを使ってみる</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2013/11/25/test-chef-prototype/</link>
      <pubDate>Mon, 25 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2013/11/25/test-chef-prototype/</guid>
      <description>&lt;p&gt;とりあえず手元の Mavericks な MBA では無理なので某仮想リソースで。起動できたら clone します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/yamanetoshi/knife-solo-prototype.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で、~/.ssh/config を以下にしておいて&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Host melody
  HostName 10.1.3.5
  User devops
  identityfile ~/.ssh/devopsOkinawa.key
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hostname は適宜読み換えてください。あと、鍵もコピィ必要。これで ssh devops@melody で接続できれば準備は OK です。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Chef-solo な環境構築メモ</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2013/11/24/configure-environment-chef-solo/</link>
      <pubDate>Sun, 24 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2013/11/24/configure-environment-chef-solo/</guid>
      <description>&lt;p&gt;MBA で環境構築できないので某仮想リソースにて云々してみます。とりあえず /usr/local に rbenv が入ってるソレにログイン。&lt;/p&gt;

&lt;p&gt;とりあえず bundler を入れておく。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo gem i bundler
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で、ディレクトリを掘ってその中で bundle init しておきます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir devops
$ cd dev ops
$ bundle init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ぐぬ。bundle が無いてorz&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fog 抽象化に関する冥想</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2013/11/23/think-about-fog-abstraction/</link>
      <pubDate>Sat, 23 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2013/11/23/think-about-fog-abstraction/</guid>
      <description>&lt;p&gt;とりあえず command line tools が導入できないのでこちら方面でアレ。&lt;/p&gt;

&lt;p&gt;エントリポイントとしては以下なのかどうか。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@compute = Fog::Compute.new(
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;で、引数として渡してる辞書に provider というソレを持たしておいて if 文orz&lt;/p&gt;

&lt;p&gt;とは言え、処理系の特殊形式と同様でこれ以上云々できないアトミックなオブジェクトなのかどうなのか。fog の実装見てみるに lib/fog/compute.rb でこの provider な値を元に分岐な記述が入ってます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;gogrid&lt;/li&gt;
&lt;li&gt;new_servers (?)&lt;/li&gt;
&lt;li&gt;baremetalcloud&lt;/li&gt;
&lt;li&gt;rackspace&lt;/li&gt;
&lt;li&gt;stormondemand&lt;/li&gt;
&lt;li&gt;vloud&lt;/li&gt;
&lt;li&gt;その他&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>devopsOkinawa#1</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2013/11/23/devopsokinawa-number-1/</link>
      <pubDate>Sat, 23 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2013/11/23/devopsokinawa-number-1/</guid>
      <description>&lt;p&gt;前日あるいはそれ以前に無線 AP については動作確認頂いておくべきでした。@shien_R さん、@y0ta さんご対応ありがとうございました。&lt;/p&gt;

&lt;h2 id=&#34;と-いうことで&#34;&gt;と、いうことで&lt;/h2&gt;

&lt;p&gt;アレな開始でいきなり反省文を書いている次第。とりあえず&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1355-1440 1 セット目&lt;/li&gt;
&lt;li&gt;1455-1540 2 セット目&lt;/li&gt;
&lt;li&gt;1555-1640 3 セット目&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;という方向にて。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ばたばたしてる中での作成</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2013/11/22/make-with-batabata/</link>
      <pubDate>Fri, 22 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2013/11/22/make-with-batabata/</guid>
      <description>&lt;p&gt;displayname でマッチさせて id と displayname を出力する実装を書いた。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  if /^devopsOkinawa/ =~ item[&amp;quot;displayname&amp;quot;]
    if item[&amp;quot;state&amp;quot;] == &amp;quot;Running&amp;quot;
      print item[&amp;quot;id&amp;quot;], &amp;quot; &amp;quot;, item[&amp;quot;displayname&amp;quot;], &amp;quot;\n&amp;quot; 
    end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これは一応な確認用でこの出力にさらに&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; awk &#39;{print $1;}&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;なフィルタをかけて id を例えば以下な destroy に渡すというアレ。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;while line = gets
  line.chomp!
  @compute.destroy_virtual_machine({
    &#39;id&#39; =&amp;gt; line,
                                   })
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでリソース破棄は楽になります。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>フィルタ作成式で考えてみる</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2013/11/22/think-about-tool/</link>
      <pubDate>Fri, 22 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2013/11/22/think-about-tool/</guid>
      <description>&lt;p&gt;o
例えば deploy したらその id と displayname を標準出力に吐きだす。あるいは displayname を固定にするのを前提にするのであれば一覧を標準出力に掃き出して grep でフィルタできるな。&lt;/p&gt;

&lt;p&gt;deploy を想定するとある名前を、な deploy のスクリプトが実行されて deploy に成功したら id を標準出力に吐き出してそれを受けて port forward な create のスクリプトが動けば良いのかな。&lt;/p&gt;

&lt;p&gt;あるいは port forward な一覧は&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;自分自身の port forward な id&lt;/li&gt;
&lt;li&gt;VM の id&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;を持っているので list するスクリプトはその一覧な文字列を出力すれば良いのかどうか。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>メンテナンス</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2013/11/22/maintenance/</link>
      <pubDate>Fri, 22 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2013/11/22/maintenance/</guid>
      <description>今日の朝のこと、API タタいたら以下でオチてました。 &#39;maintenance&#39; (MultiJson::LoadError) 着信したメイルによれば障害発生してたようですが、valid な json 戻してくれればいいのに</description>
    </item>
    
    <item>
      <title>勉強会当日の運用の作戦</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2013/11/20/devopsokinawa-plan/</link>
      <pubDate>Wed, 20 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2013/11/20/devopsokinawa-plan/</guid>
      <description>&lt;p&gt;とりあえずペアプロなセッションが三発。度毎にリセットしなければならないはず。スナップショットは取らない方向なので都度肝心なファイルは吸いあげて下さいね、誰となく。&lt;/p&gt;

&lt;p&gt;# て案内しないとマズいですね&lt;/p&gt;

&lt;p&gt;とりあえずこちらマターの手順を検討しつつ上のような注意事項が事前発信できれば良いのかどうか。とりあえず事前準備としては以下か。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GIP は手動で事前確保 (参加人数の &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2&lt;/sub&gt; なのかどうか)&lt;/li&gt;
&lt;li&gt;確保したら ssh 接続用の public port を解放しておく (手動)&lt;/li&gt;
&lt;li&gt;必要数分仮想リソース確保して接続試験実施しておく&lt;/li&gt;
&lt;li&gt;メイルで鍵配布&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>情報共有とか発信事項など</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2013/11/20/preparation-of-conference/</link>
      <pubDate>Wed, 20 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2013/11/20/preparation-of-conference/</guid>
      <description>&lt;p&gt;ちょっと以下に纏めて GitHub 方面に反映の方向。&lt;/p&gt;

&lt;p&gt;つうか何を情報共有しなければならないのか、という件もアレ。以下に列挙してみる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;すること、について&lt;/li&gt;
&lt;li&gt;用意しておいて欲しい環境&lt;/li&gt;
&lt;li&gt;セッションで使う環境について&lt;/li&gt;
&lt;li&gt;資料の URL など&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fog で firewall 操作</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2013/11/19/firewall-operation-by-fog/</link>
      <pubDate>Tue, 19 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2013/11/19/firewall-operation-by-fog/</guid>
      <description>&lt;p&gt;とりあえず IP address の確認から、っていきなり見当たらず焦るなど。以下なのか。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Address

&lt;ul&gt;
&lt;li&gt;associateIpAddress&lt;/li&gt;
&lt;li&gt;listPublicIpAddress&lt;/li&gt;
&lt;li&gt;disassociateIpAddress&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;とは言え、今回は Fog から云々、ってのは想定してなくて、IP 確保しといて ID が分かってれば OK ですね。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fog で勉強会用仮想リソースの面倒を見る件</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2013/11/19/fog/</link>
      <pubDate>Tue, 19 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2013/11/19/fog/</guid>
      <description>&lt;p&gt;仮想リソースの kickoff および破棄と一覧表示は何とかなっているので、後は接続できるようにしないといけないのですがどうするか。&lt;/p&gt;

&lt;p&gt;例えば VM を kickoff するのが以下なんですが&lt;/p&gt;

&lt;p&gt;{% gist 7537625 %}&lt;/p&gt;

&lt;p&gt;認証に関する情報とか、仮想リソース deploy に関する情報はカレントディレクトリの access_key.rb に纏めて定義してあります。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cookbook 探すなど</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2013/11/18/search-chef-cookbook/</link>
      <pubDate>Mon, 18 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2013/11/18/search-chef-cookbook/</guid>
      <description>&lt;p&gt;以下な要件?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ユーザ追加必要なのか&lt;/li&gt;
&lt;li&gt;そのユーザはパスワードなしで sudo できること&lt;/li&gt;
&lt;li&gt;~/.ssh/authorized_keys 追加&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;つうかこれらを盛り込んで rbenv を導入したソレを作成して関係方面に連絡入れることに。昔 CloudStack のテンプレ作ったことあるんだけれど、スデに忘却の彼方に去ってらっしゃいます。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>勉強会で想定している流れ</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2013/11/18/devops-okinawa-11-23/</link>
      <pubDate>Mon, 18 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2013/11/18/devops-okinawa-11-23/</guid>
      <description>&lt;p&gt;ペアでイテレーション、とか言うておりますが具体的に何するのか、というナニ。以下かなぁ、と考えていたりなど。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Chef あるいは Puppet で作って serverspec で試験する流れを学ぶ&lt;/li&gt;
&lt;li&gt;実際のユースケイスを想定して色々ヤッてみる&lt;/li&gt;
&lt;li&gt;必要な cookbook を作る (Chef)&lt;/li&gt;
&lt;li&gt;流通している cookbook を適用してみる (Chef)&lt;/li&gt;
&lt;li&gt;Debian 系と RHL 系のパケジ管理の抽象化について確認してみる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;とは言えぶっちゃけテーマ設定はペアにお任せ、で良いのかどうか。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DevOps Okinawa てき自分ネタ</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2013/11/12/material-of-devops-okinawa/</link>
      <pubDate>Tue, 12 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2013/11/12/material-of-devops-okinawa/</guid>
      <description>今以下の二つで自動で環境作ってくれると有難いナニがあります。 Android の build および試験なリソースの kickoff DevOps 勉強会向けリソースの kickoff ぼくもペアプロなセッション</description>
    </item>
    
    <item>
      <title>DevOps Okinawa な勉強会</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2013/11/11/devops-okinawa/</link>
      <pubDate>Mon, 11 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2013/11/11/devops-okinawa/</guid>
      <description>&lt;p&gt;某所から仮想リソースを払いだしてもらえるみたいなのですが&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;起動して初期設定がアレ&lt;/li&gt;
&lt;li&gt;接続のための鍵について&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;という問題があるなと。関係方面に問い合わせているのですが諸々以下に控え。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DevOps Okinawa #1</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2013/11/05/devops-okinawa-1/</link>
      <pubDate>Tue, 05 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2013/11/05/devops-okinawa-1/</guid>
      <description>11.23 (土) 午後に開催の方向です。 DevOps Okinawa #1 Vagrant (あるいは実際の (?) 仮想リソース) + {Chef, Puppet} + serverspec というあたりを使って CodeRetreat な方式、ってのを思いついた次第です。ど</description>
    </item>
    
    <item>
      <title>serverspec のはじめかた</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2013/11/05/how-to-begin-serverspec/</link>
      <pubDate>Tue, 05 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2013/11/05/how-to-begin-serverspec/</guid>
      <description>&lt;p&gt;備忘、ってことで。
とりあえず、bundler を使ってガワを作るあたりまでを控え。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Vagrant-Chef ハンズオン資料</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2013/11/03/vagrant-chef-handson-material/</link>
      <pubDate>Sun, 03 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2013/11/03/vagrant-chef-handson-material/</guid>
      <description>&lt;p&gt;とりあえず作成着手。章立てとして以下で良いですかね (誰&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;vagrant 動作確認&lt;/li&gt;
&lt;li&gt;knife-solo&lt;/li&gt;
&lt;li&gt;レシピを作って実行する&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;とりあえずここまでを作ってみることに。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>