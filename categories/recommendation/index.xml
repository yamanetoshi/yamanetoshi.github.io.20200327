<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Recommendation on /var/log/messages</title>
    <link>https://weblog.metacircular-evaluator.org/categories/Recommendation/</link>
    <description>Recent content in Recommendation on /var/log/messages</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 28 Jul 2018 15:31:13 +0900</lastBuildDate>
    
	<atom:link href="https://weblog.metacircular-evaluator.org/categories/Recommendation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>映画の推薦システムを作る</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2018/07/28/make-movie-recommendation-system/</link>
      <pubDate>Sat, 28 Jul 2018 15:31:13 +0900</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2018/07/28/make-movie-recommendation-system/</guid>
      <description>&lt;p&gt;以下な ipynb を確認しつつ控えを取ってみます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/oreilly-japan/ml-at-work/blob/master/chap07/Movie_recommendation.ipynb&#34;&gt;7章: 映画の推薦システムを作る&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Recommendation 取得実装について</title>
      <link>https://weblog.metacircular-evaluator.org/blog/2018/07/20/implementation-to-get-recommendation/</link>
      <pubDate>Fri, 20 Jul 2018 20:52:45 +0900</pubDate>
      
      <guid>https://weblog.metacircular-evaluator.org/blog/2018/07/20/implementation-to-get-recommendation/</guid>
      <description>&lt;p&gt;以下コメントのデータを投入して Ruby からデータ要求する実装を確認してみました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bit.ly/2L35rOa&#34;&gt;Recommendation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上記の記載で使用したものが以下となります。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gremlin&amp;gt; g.V().has(&#39;person&#39;,&#39;name&#39;,&#39;alice&#39;).as(&#39;her&#39;).
               out(&#39;bought&#39;).aggregate(&#39;self&#39;).
               in(&#39;bought&#39;).where(neq(&#39;her&#39;)).
               out(&#39;bought&#39;).where(without(&#39;self&#39;)).
               groupCount().
               order(local).
                 by(values, decr)
==&amp;gt;[v[10]:6,v[26]:5,v[12]:5,v[24]:4,v[28]:2]
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>